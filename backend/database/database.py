import sqlite3

DB_PATH = "mai_schedule.db"


def create_tables():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –≤ –ë–î, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç"""
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS groups (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT UNIQUE,
            link TEXT
        )
    ''')

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS schedule (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            group_name TEXT,
            week INTEGER,
            day TEXT,
            time TEXT,
            subject TEXT,
            teacher TEXT,
            room TEXT,
            FOREIGN KEY(group_name) REFERENCES groups(name)
        )
    ''')

    conn.commit()
    conn.close()


def save_groups(groups):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø –≤ –ë–î"""
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()

    for group in groups:
        try:
            cursor.execute("INSERT INTO groups (name, link) VALUES (?, ?)", (group["name"], group["link"]))
        except sqlite3.IntegrityError:
            pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã

    conn.commit()
    conn.close()


def get_groups():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥—Ä—É–ø–ø –∏–∑ –ë–î"""
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()

    cursor.execute("SELECT name, link FROM groups")
    groups = [{"name": row[0], "link": row[1]} for row in cursor.fetchall()]

    conn.close()
    return groups


def save_schedule(group_name, schedule):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –ë–î"""
    conn = sqlite3.connect("mai_schedule.db")
    cursor = conn.cursor()

    if not schedule:
        print(f"‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î –¥–ª—è –≥—Ä—É–ø–ø—ã {group_name}.")
        return

    print(f"üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º {len(schedule)} –∑–∞–Ω—è—Ç–∏–π –¥–ª—è {group_name}...")

    for lesson in schedule:
        cursor.execute('''
            INSERT INTO schedule (group_name, week, day, time, subject, teacher, room)
            VALUES (?, ?, ?, ?, ?, ?, ?)
        ''', (group_name, lesson["week"], lesson["day"], lesson["time"],
              lesson["subject"], lesson["teacher"], lesson["room"]))

    conn.commit()
    conn.close()
    print(f"‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è {group_name} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")


def query_db(query, args=(), one=False):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç SQL-–∑–∞–ø—Ä–æ—Å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
    """
    conn = sqlite3.connect("mai_schedule.db")
    cursor = conn.cursor()
    cursor.execute(query, args)
    result = cursor.fetchall()
    conn.close()
    return (result[0] if result else None) if one else result


def execute_db(query, args=()):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç SQL-–∑–∞–ø—Ä–æ—Å (INSERT, UPDATE, DELETE) –∏ –∫–æ–º–º–∏—Ç–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è.
    """
    conn = sqlite3.connect("mai_schedule.db")
    cursor = conn.cursor()
    cursor.execute(query, args)
    conn.commit()
    conn.close()


create_tables()
