import sqlite3

# –°–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –∑–∞–Ω—è—Ç–∏–π
ALLOWED_IT_ROOMS = {
    "–ì–£–ö –ë-416", "–ì–£–ö –ë-362", "–ì–£–ö –ë-434", "–ì–£–ö –ë-436", "–ì–£–ö –ë-422",
    "–ì–£–ö –ë-438", "–ì–£–ö –ë-440", "–ì–£–ö –ë-417", "–ì–£–ö –ë-426", "–ì–£–ö –ë-415",
    "–ì–£–ö –ë-324", "–ì–£–ö –ë-325", "–ì–£–ö –ë-326", "–ì–£–ö –ë-418", "–ì–£–ö –ë-420"
}

# –°–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–ª—å–∑—è –∑–∞–Ω–∏–º–∞—Ç—å
EXCLUDED_ROOMS = {
    "–ì–£–ö –ë-413", "–ì–£–ö –ë-419", "–ì–£–ö –ë-421", "–ì–£–ö –ë-423",
    "–ì–£–ö –ë-425", "–ì–£–ö –ë-432", "–ì–£–ö –ë-430", "–ì–£–ö –ë-424"
}


def setup_db():
    """–°–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç"""
    conn = sqlite3.connect("mai_schedule.db")
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ `group_name`
    cursor.execute("PRAGMA table_info(occupied_rooms);")
    columns = [row[1] for row in cursor.fetchall()]

    if "group_name" not in columns:
        print("üîÑ –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É group_name –≤ occupied_rooms...")
        cursor.execute("ALTER TABLE occupied_rooms ADD COLUMN group_name TEXT;")

    cursor.execute("""
        CREATE TABLE IF NOT EXISTS occupied_rooms (
            week INTEGER, 
            day TEXT, 
            time TEXT, 
            room TEXT, 
            subject TEXT, 
            teacher TEXT,
            group_name TEXT
        )
    """)

    cursor.execute("""
        CREATE TABLE IF NOT EXISTS free_rooms (
            week INTEGER, 
            day TEXT, 
            time TEXT, 
            room TEXT
        )
    """)

    conn.commit()
    conn.close()


def get_occupied_rooms():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–Ω—è—Ç—ã—Ö IT-–∫–∞–±–∏–Ω–µ—Ç–æ–≤ —Å –≥—Ä—É–ø–ø–∞–º–∏"""
    conn = sqlite3.connect("mai_schedule.db")
    cursor = conn.cursor()

    cursor.execute("""
        SELECT week, day, time, room, subject, teacher, group_name
        FROM schedule
        WHERE room IN ({})
    """.format(",".join(["?"] * len(ALLOWED_IT_ROOMS))), tuple(ALLOWED_IT_ROOMS))

    occupied_rooms = cursor.fetchall()
    conn.close()

    return occupied_rooms


def get_free_rooms():
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã–µ IT-–∫–∞–±–∏–Ω–µ—Ç—ã"""
    occupied_rooms = get_occupied_rooms()
    occupied_set = {(week, day, time, room) for week, day, time, room, _, _, _ in occupied_rooms}

    free_rooms = []
    for week in range(1, 18):
        for day in ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±"]:
            for time in ["09:00 - 10:30", "10:45 - 12:15", "13:00 - 14:30", "14:45 - 16:15"]:
                for room in ALLOWED_IT_ROOMS:
                    if (week, day, time, room) not in occupied_set:
                        free_rooms.append((week, day, time, room))

    return free_rooms


def save_filtered_data():
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–Ω—è—Ç—ã–µ –∏ —Å–≤–æ–±–æ–¥–Ω—ã–µ –∫–∞–±–∏–Ω–µ—Ç—ã –≤ –ë–î"""
    setup_db()  # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç

    conn = sqlite3.connect("mai_schedule.db")
    cursor = conn.cursor()

    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
    cursor.execute("DELETE FROM occupied_rooms")
    cursor.execute("DELETE FROM free_rooms")

    # –ó–∞–ø–æ–ª–Ω—è–µ–º –∑–∞–Ω—è—Ç—ã–µ –∫–∞–±–∏–Ω–µ—Ç—ã
    occupied_rooms = get_occupied_rooms()
    cursor.executemany("INSERT INTO occupied_rooms VALUES (?, ?, ?, ?, ?, ?, ?)", occupied_rooms)

    # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–≤–æ–±–æ–¥–Ω—ã–µ –∫–∞–±–∏–Ω–µ—Ç—ã
    free_rooms = get_free_rooms()
    cursor.executemany("INSERT INTO free_rooms VALUES (?, ?, ?, ?)", free_rooms)

    conn.commit()
    conn.close()
    print("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")


if __name__ == "__main__":
    save_filtered_data()