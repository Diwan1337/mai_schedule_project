import sqlite3
from datetime import datetime, timedelta
from backend.notifier.telegram_bot import send_telegram_message
from backend.notifier.notifications_config import DATABASE_PATH
import os

print("\n" + "="*50)
print(f"üïí –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ {datetime.now()}")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –ë–î
if not os.path.exists(DATABASE_PATH):
    print(f"‚ùå –§–∞–π–ª –ë–î –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {DATABASE_PATH}")
    exit(1)

try:
    conn = sqlite3.connect(DATABASE_PATH)
    cursor = conn.cursor()
    print(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –ë–î: {DATABASE_PATH}")

    thirty_minutes_ago = datetime.now() - timedelta(minutes=30)
    print(f"‚è≥ –ò—â–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ: {thirty_minutes_ago}")

    cursor.execute("""
        SELECT schedule_id, change_type, timestamp 
        FROM changes_log 
        WHERE timestamp > ?
        ORDER BY timestamp DESC
    """, (thirty_minutes_ago.strftime("%Y-%m-%d %H:%M:%S"),))
    
    changes = cursor.fetchall()
    conn.close()

    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {len(changes)}")
    
    if not changes:
        print("‚úÖ –ù–µ—Ç –Ω–æ–≤—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π")
        exit(0)

    message = "<b>üóì –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏:</b>\n" + \
              "\n".join(f"‚Ä¢ [{row[1].upper()}] –ü–∞—Ä–∞ ID: {row[0]} –≤ {row[2]}" for row in changes)
    
    print(f"‚úâÔ∏è –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n{message}")
    
    result = send_telegram_message(message)
    if result.get('ok'):
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {result}")

except Exception as e:
    print(f"üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
    raise